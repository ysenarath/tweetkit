    def {{ request.operation_id }}(self{% if request.request_body.required %}, data{% endif %}{% if request.parameters %}, {% endif %}{% for p in request.parameters %}{{ p.name.replace('.', '_') }}{% if not p.required %}=None{% endif %}{% if not loop.last %}, {% endif %}{% endfor %}{% if not request.request_body.required %}, data=None{% endif %}):
        """{{ request.summary }}{%- if not request.summary.endswith('.') -%}.{%- endif %}

        {% if request.description -%}
        {{ request.description }}{% if not request.description.endswith('.') %}.{% endif %}
        {%- endif %}

        {% if request.parameters -%}
        Parameters
        ----------
        {%- if request.request_body.required %}
        data: dict
            The request body.
        {%- endif -%}
        {%- for p in request.parameters %}
        {{ p.name.replace('.', '_') }}: {{ p.schema.complete_type }}{% if not p.required %}, optional{% endif %}
            {{ p.description }}
            {%- if p.example -%}
            Example: {{ p.example }}.
            {%- endif %}
        {%- endfor %}
        {%- if not request.request_body.required %}
        data: dict
            The request body.
        {%- endif %}
        
        {% endif -%}

        Notes
        -----
        For more information, see: `here <{{ request.external_docs }}>`__.
        
        Returns
        -------
        obj: {% if request.x_twitter_streaming %}TwitterObjectStream{% else %}TwitterObject{% endif %}
            A object with the response data.
        """
        request_params, request_query = {}, {}
        {% for p in request.parameters -%}
        {%- if p.in_ == 'path' -%}
        {%- if not p.required -%}
        if {{ p.name.replace('.', '_') }} is not None:
            request_params['{{ p.name }}'] = {{ p.name.replace('.', '_') }}
        {% if p.schema.type == 'list' and p.schema.items.public_enum is not none -%}
        else:
            request_params['{{ p.name }}'] = [{% if p.schema.items.type == 'string' %}'{{ p.schema.items.public_enum | join('\', \'') }}'{% else %}{{ p.schema.items.public_enum | join(', ') }}{% endif %}]
        {% endif -%}
        {%- else -%}
        request_params['{{ p.name }}'] = {{ p.name.replace('.', '_') }}
        {% endif -%}
        {%- endif -%}
        {%- endfor -%}
        {%- for p in request.parameters -%}
        {%- if p.in_ == 'query' -%}
        {%- if not p.required -%}
        if {{ p.name.replace('.', '_') }} is not None:
            request_query['{{ p.name }}'] = {{ p.name.replace('.', '_') }}
        {% if p.schema.type == 'list' and p.name != 'exclude' and p.schema.items.public_enum is not none -%}
        else:
            request_query['{{ p.name }}'] = [{% if p.schema.items.type == 'string' %}'{{ p.schema.items.public_enum | join('\', \'') }}'{% else %}{{ p.schema.items.public_enum | join(', ') }}{% endif %}]
        {% endif -%}
        {% else -%}
        request_query['{{ p.name }}'] = {{ p.name.replace('.', '_') }}
        {% endif -%}
        {%- endif -%}
        {%- endfor -%}
        {%- set has_response_type = (path, request.method) in response_types -%}
        return self.client.request('{{ path }}', method='{{ request.method }}', query=request_query, params=request_params, data=data{% if request.x_twitter_streaming %}, stream={{ request.x_twitter_streaming }}{% endif %}{% if has_response_type %}, dtype='{{ response_types[path, request.method]['type'] }}'{% endif %})
        
